#include <iostream>
#include <cmath>
using namespace std;

double f(double x) {
    return exp(-2*x) * sin(2*x);
}

// Метод прямоугольников
double rectangle_method(double a, double b, int n) {
    double h = (b - a) / n;
    double sum = 0.0;
    for (int i = 0; i < n; ++i) {
        sum += f(a + (i + 0.5) * h);
    }
    return h * sum;
}

// Метод трапеций
double trapezoidal_method(double a, double b, int n) {
    double h = (b - a) / n;
    double sum = 0.5 * (f(a) + f(b));
    for (int i = 1; i < n; ++i) {
        sum += f(a + i * h);
    }
    return h * sum;
}

// Метод Симпсона
double simpson_method(double a, double b, int n) {
    double h = (b - a) / n;
    double sum = f(a) + f(b);
    for (int i = 1; i < n; i += 2) {
        sum += 4 * f(a + i * h);
    }
    for (int i = 2; i < n-1; i += 2) {
        sum += 2 * f(a + i * h);
    }
    return h / 3 * sum;
}

int main() {
    double a = 0.0; 
    int n = 1;
    double result_rect, result_trap, result_simpson;
    
    do {
        result_rect = rectangle_method(a, INFINITY, n);
        result_trap = trapezoidal_method(a, INFINITY, n);
        result_simpson = simpson_method(a, INFINITY, n);
        n *= 2;
    } while (abs(result_rect - result_trap) >= 1e-6 && abs(result_trap - result_simpson) >= 1e-6);

    cout << "Значение интеграла методом прямоугольников: " << result_rect << endl;
     cout << "Значение интеграла методом трапеций: " << result_trap <<  endl;
     cout << "Значение интеграла методом Симпсона: " << result_simpson <<  endl;

    return 0;
}
